{
    "collab_server" : "",
    "contents" : "set.seed(1313)\n\nsub <- sample(nrow(abalone_csv), floor(nrow(abalone_csv)*0.7))\n\nsub[1:50]\n\nTrain <- abalone_csv[sub, ]\nTest <- abalone_csv[-sub,]\n\n\ncor(Train[-c(1, 2, 3, 4, 5, 7, 8)])\n\nmodel1 <- lm(rings ~ sex+height+weight.w+weight.sh, data = Train)\n\nmodel2 <- lm(rings ~ sex+height+weight.sh, data = Train)\n\nmodel3 <- lm(rings ~ sex+height+weight.w, data = Train)\n\nlibrary(memisc)\nmtable(model1, model2, model3)\n\nRMSE_base <- sqrt( mean( ( Test$rings - mean( Train$rings ) )^2 ) )\nRMSE_base\n\npred1 <- predict(model1, newdata = Test)\npred2 <- predict(model2, newdata = Test)\npred3 <- predict(model3, newdata = Test)\n\nRMSE_1 <- sqrt( mean( ( Test$rings - pred1 )^2 ) )\nRMSE_2 <- sqrt( mean( ( Test$rings - pred2 )^2 ) )\nRMSE_3 <- sqrt( mean( ( Test$rings - pred3 )^2 ) )\n\nRMSE_1\nRMSE_2\nRMSE_3\n\n\nboston_csv <- read.csv(\"Boston.csv\")\nView(boston_csv)\n\nlibrary(ggplot2)\n\ncor(boston_csv[-c(4)])\n\nqplot(log(DIS), MEDV, data = boston_csv)\nqplot(log(CRIM), MEDV, data = boston_csv) #nope\nqplot(ZN, MEDV, data = boston_csv) #nope\nqplot(RM, MEDV, data = boston_csv) #linear relation\nqplot(AGE, MEDV, data = boston_csv) #\nqplot(sqrt(DIS), MEDV, data = boston_csv) #\nqplot(1/LSTAT, MEDV, data = boston_csv)\n\nqplot(log(LSTAT), MEDV, data = boston_csv)\n\ncor(boston_csv$LSTAT^2, boston_csv$MEDV)\ncor(log(boston_csv$LSTAT), boston_csv$MEDV)\ncor(1/boston_csv$LSTAT, boston_csv$MEDV)\ncor(1/log(boston_csv$LSTAT), boston_csv$MEDV)\n\nboston_csv$LOG_STAT <- log(boston_csv$LSTAT)\n\nset.seed(2020)\n\nsub <- sample(nrow(boston_csv), floor(nrow(boston_csv)*0.7))\n\nTrain <- boston_csv[sub, ]\nTest <- boston_csv[-sub,]\n\n#formulas\nfm1 <- formula(MEDV~CRIM+ZN+INDUS+CHAS+NOX-RM+AGE+DIS+TAX+PTRATIO+B+LOG_STAT)\n\nfm2 <- formula(MEDV~CRIM+ZN+INDUS+CHAS+NOX-RM+AGE+DIS+RAD+PTRATIO+B+LOG_STAT)\n\nfm3 <- formula(MEDV~CRIM+ZN+INDUS+CHAS+NOX-RM+AGE+DIS+TAX+PTRATIO+B+LSTAT)\n\n#creating model\n\nmodel1 <- lm(fm1, data = Train)\nmodel2 <- lm(fm2, data = Train)\nmodel3 <- lm(fm3, data = Train)\n\n\npred1 <- predict(model1, newdata = Test)\npred2 <- predict(model2, newdata = Test)\npred3 <- predict(model3, newdata = Test)\n\nRMSE_1 <- sqrt( mean( ( Test$MEDV - pred1 )^2 ) )\nRMSE_2 <- sqrt( mean( ( Test$MEDV - pred2 )^2 ) )\nRMSE_3 <- sqrt( mean( ( Test$MEDV - pred3 )^2 ) )\n\nRMSE_1; RMSE_2; RMSE_3\n\nsummary(model2)\n\nnew_fm <- formula(MEDV~CRIM-ZN-INDUS+CHAS+NOX-RM+AGE+DIS+RAD+PTRATIO+B+LOG_STAT)\n\nnew_model <- lm(new_fm, data = Train)\n\nnew_pred <- predict(new_model, newdata = Test)\n\nnew_RMSE <- sqrt( mean( ( Test$MEDV - new_pred )^2 ) )\n\nnew_RMSE #worse RMSE cause of removed variables (even not significant)\n\n\nmodel_all <- lm(MEDV~.-LSTAT, data = Train)\n\nlibrary(MASS)\n\nstep <- stepAIC(model_all, direction = \"both\")\n\nstep$anova\n\n\n\n\n",
    "created" : 1476459187412.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "251889732",
    "id" : "2DD83ED0",
    "lastKnownWriteTime" : 1475226992,
    "last_content_update" : 1475226992,
    "path" : "D:/Programming/R/R_Learn_Project/Models_Predictions.R",
    "project_path" : "Models_Predictions.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}