pisaTrain <- read.csv("pisa2009train.csv")
View(pisaTrain)
pisaTest <- read.csv("pisa2009test.csv")
mean(pisaTrain$readingScore)
summary(pisaTrain)
propmiss(pisaTrain)
propmiss <- function(dataframe) lapply(dataframe,function(x)
data.frame(nmiss=sum(is.na(x)), n=length(x), propmiss=sum(is.na(x))/length(x)))
propmiss(pisaTrain)
?lapply
library(plyr)
propmiss <- function(dataframe) lapply(dataframe,function(x)
data.frame(nmiss=sum(is.na(x)), n=length(x), propmiss=sum(is.na(x))/length(x)))
## calling function on the pisaTrain
propmiss(pisaTrain)
propmiss <- function(dataframe) lapply(dataframe,function(x)
data.frame(nmiss=sum(is.na(x))))
propmiss(pisaTrain)
rm(propmiss)
values_miss <- function(dataframe) lapply(dataframe,function(x) data.frame(nmiss=sum(is.na(x))))
values_miss <- function(dataframe) lapply(dataframe,function(x)
data.frame(nmiss=sum(is.na(x))))
values_miss(pisaTrain)
?na.omit
na.omit(pisaTrain)
pisaTrain <- na.omit(pisaTrain)
View(pisaTrain)
pisaTest <- na.omit(pisaTest)
values_miss(pisaTrain) ## var's with 0 na's are: grades
?relevel
relevel(pisaTrain$raceeth, "White")
pisaTrain$raceeth <- relevel(pisaTrain$raceeth, "White")
pisaTest$raceeth <- relevel(pisaTest$raceeth, "White")
pisa_model <- lm(readingScore~., data = pisaTrain)
pisa_model
library(MASS)
step <- stepAIC(pisa_model, direction = "both")
step$anova
rm(step)
library(memisc)
mtable(pisa_model)
library(memisc)
mtable(pisa_model)
mtable(pisa_model)
pisa_predicst <- predict(pisa_model, newdata = pisaTest)
pisa_predict <- predict(pisa_model, newdata = pisaTest)
rm(pisa_predicst)
pisa_predict <- predict(pisa_model, newdata = pisaTest)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predicst )^2 ) )
RMSE_train_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predict )^2 ) )
RMSE_train_pisa
pisa_predict <- predict(pisa_model, newdata = pisaTrain)
pisa_predict <- predict(pisa_model, newdata = pisaTest)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predict )^2 ) )
RMSE_train_pisa ## 76.29079
pisa_predict <- predict(pisa_model, newdata = pisaTrain)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( pisaTrain$readingScore - pisa_predict )^2 ) )
RMSE_train_pisa ## 76.29079
RMSE_test_pisa ## 76.29079
pisa_predict <- predict(pisa_model, newdata = pisaTest)
## RMSE
RMSE_test_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predict )^2 ) )
RMSE_test_pisa ## 76.29079
library(MASS)
step <- stepAIC(pisa_model, direction = "both")
step$anova
summary(pisa_model)
rm(step)
flu <- read.csv("Flu.csv")
summary(flu$ILI)
View(flu)
qplot(log(ILI), Queries, data = flu)
library(ggplot2)
qplot(log(ILI), Queries, data = flu)
sub <- sample(nrow(flu), floor(nrow(flu)*0.75))
fluTrain <- flu[sub, ]
fluTest <- flu[-sub,]
climate_change <- read.csv("climate_change.csv")
?subset()
?subset
View(climate_change)
subset(climate_change, Year <= 2006)
climateTrain <- subset(climate_change, Year <= 2006)
climateTest <- [!(climate_change$Year %in% climateTrain$Year),]
climateTest <- climate_change[!(climate_change$Year %in% climateTrain$Year),]
View(climateTest)
climate_fm <- formula(Temp ~ MEI+CO2+CH4+N2O+CFC.11+CFC.12+TSI+Aerosols-Year-Month)
climate_model <- lm(climate_fm, data = climateTrain)
summary(pisa_model)
summary(climate_model)
cor(N2O~.)
cor(climateTrain$N2O,)
variables <- sapply(climateTrain, is.numeric)
cor(climateTrain[,variables])
new_climate_fm <- formula(Temp ~ MEI-CO2-CH4-N2O-CFC.11-CFC.12+TSI+Aerosols-Year-Month)
new_climate_model <- lm(new_climate_fm, data = climateTrain)
summary(new_climate_model)
new_climate_fm <- formula(Temp ~ MEI-CO2-CH4+N2O-CFC.11-CFC.12+TSI+Aerosols-Year-Month)
new_climate_model <- lm(new_climate_fm, data = climateTrain)
summary(new_climate_model)
library(MASS)
climate_step <- stepAIC(pisa_model, direction = "both")
climate_step$anova
climate_step <- stepAIC(climate_model, direction = "both")
climate_step$anova
rm(climate_step)
climate_step <- stepAIC(climate_model, direction = "both")
climate_step$anova
climate_step <- stepAIC(climate_model, direction = "both")
climate_predict <- predict(climate_model, newdata = climateTest)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( climateTest$Temp - pisa_predict )^2 ) )
climate_predict <- predict(climate_model, newdata = climateTest)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( climateTest$Temp - climate_predict )^2 ) )
climate_predict <- predict(climate_step, newdata = climateTest)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( climateTest$Temp - climate_predict )^2 ) )
RMSE_climate_AIC <- sqrt( mean( ( climateTest$Temp - climate_predict )^2 ) )
RMSE_climate_AIC
RMSE_climate_AIC
str(pisaTrain)
str(pisaTest)
pisa_model <- lm(readingScore~., data = pisaTrain)
summary(pisa_model)
pisa_predict <- predict(pisa_model, newdata = pisaTrain)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( pisaTrain$readingScore - pisa_predict )^2 ) )
RMSE_train_pisa ## 73.36555
pisa_predict <- predict(pisa_model, newdata = pisaTest)
## RMSE
RMSE_test_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predict )^2 ) )
RMSE_test_pisa ## 76.29079
nrow(pisaTrain)
nrow(pisaTest)
levels(pisaTrain$raceeth)
## importing PISA datasets
pisaTrain <- read.csv("pisa2009train.csv") ## 3663 students
pisaTest <- read.csv("pisa2009test.csv") ## 1570 students
mean(pisaTrain$readingScore) ##497.9114
## function to give a summary of missing values (count na's)
library(plyr)
values_miss <- function(dataframe) lapply(dataframe,function(x)
data.frame(nmiss=sum(is.na(x))))
## calling function on the pisaTrain
values_miss(pisaTrain) ## var's with 0 na's are: grade, male, publicschool, urban, readingscore
?na.omit
pisaTrain <- na.omit(pisaTrain)
pisaTest <- na.omit(pisaTest)
nrow(pisaTrain) ## 2414
nrow(pisaTest) ## 990
## 6 and 7 here
str(pisaTrain)
str(pisaTest)
?relevel
pisaTrain$raceeth <- relevel(pisaTrain$raceeth, "White")
pisaTest$raceeth <- relevel(pisaTest$raceeth, "White")
## creating a model with readingScore as a dependent variable
pisa_model <- lm(readingScore~., data = pisaTrain)
summary(pisa_model)
library(memisc)
mtable(pisa_model)
## prediction training
pisa_predict <- predict(pisa_model, newdata = pisaTrain)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( pisaTrain$readingScore - pisa_predict )^2 ) )
RMSE_train_pisa ## 73.36555
## prediction testing
pisa_predict <- predict(pisa_model, newdata = pisaTest)
## RMSE
RMSE_test_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predict )^2 ) )
RMSE_test_pisa ## 76.29079
## problem 11
levels(pisaTrain$raceeth)
str(pisaTrain)
summary(pisa_model)
pisa_baseline <- mean(pisaTrain$readingScore)
pisa_baseline
pisa_SST <- (pisa_baseline - pisaTest$readingScore)^2 %>% sum()
pisa_SST
pisa_SST = sum((mean(pisa.train$readingScore) - pisa.test$readingScore)^2)
pisa_SST = sum((mean(pisaTrain$readingScore) - pisaTest$readingScore)^2)
pisa_SST
RMSE_test_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predict )^2 ) )
## importing PISA datasets
pisaTrain <- read.csv("pisa2009train.csv") ## 3663 students
pisaTest <- read.csv("pisa2009test.csv") ## 1570 students
mean(pisaTrain$readingScore) ##497.9114
## function to give a summary of missing values (count na's)
library(plyr)
values_miss <- function(dataframe) lapply(dataframe,function(x)
data.frame(nmiss=sum(is.na(x))))
## calling function on the pisaTrain
values_miss(pisaTrain) ## var's with 0 na's are: grade, male, publicschool, urban, readingscore
?na.omit
pisaTrain <- na.omit(pisaTrain)
pisaTest <- na.omit(pisaTest)
nrow(pisaTrain) ## 2414
nrow(pisaTest) ## 990
## 6 and 7 here
str(pisaTrain)
str(pisaTest)
?relevel
pisaTrain$raceeth <- relevel(pisaTrain$raceeth, "White")
pisaTest$raceeth <- relevel(pisaTest$raceeth, "White")
## creating a model with readingScore as a dependent variable
pisa_model <- lm(readingScore~., data = pisaTrain)
summary(pisa_model)
library(memisc)
mtable(pisa_model)
## prediction training
pisa_predict <- predict(pisa_model, newdata = pisaTrain)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( pisaTrain$readingScore - pisa_predict )^2 ) )
RMSE_train_pisa ## 73.36555
## prediction testing
pisa_predict <- predict(pisa_model, newdata = pisaTest)
## RMSE
RMSE_test_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predict )^2 ) )
RMSE_test_pisa ## 76.29079
## problem 11
levels(pisaTrain$raceeth)
str(pisaTrain)
## problem 13
summary(pisa_model) ## take alfa = 0.05
## problem 14
pisa_baseline <- mean(pisaTrain$readingScore)
pisa_baseline
## problem 15
R2 = 1 - RMSE_train_pisa/pisa_SST
R2
rm(R@)
rm(R2)
cor(log(Flu$ILI), log(Flu$Queries))
## importing PISA datasets
pisaTrain <- read.csv("pisa2009train.csv") ## 3663 students
pisaTest <- read.csv("pisa2009test.csv") ## 1570 students
mean(pisaTrain$readingScore) ##497.9114
## function to give a summary of missing values (count na's)
library(plyr)
values_miss <- function(dataframe) lapply(dataframe,function(x)
data.frame(nmiss=sum(is.na(x))))
## calling function on the pisaTrain
values_miss(pisaTrain) ## var's with 0 na's are: grade, male, publicschool, urban, readingscore
?na.omit
pisaTrain <- na.omit(pisaTrain)
pisaTest <- na.omit(pisaTest)
nrow(pisaTrain) ## 2414
nrow(pisaTest) ## 990
## 6 and 7 here
str(pisaTrain)
str(pisaTest)
?relevel
pisaTrain$raceeth <- relevel(pisaTrain$raceeth, "White")
pisaTest$raceeth <- relevel(pisaTest$raceeth, "White")
## creating a model with readingScore as a dependent variable
pisa_model <- lm(readingScore~., data = pisaTrain)
summary(pisa_model)
library(memisc)
mtable(pisa_model)
## prediction training
pisa_predict <- predict(pisa_model, newdata = pisaTrain)
## RMSE
RMSE_train_pisa <- sqrt( mean( ( pisaTrain$readingScore - pisa_predict )^2 ) )
RMSE_train_pisa ## 73.36555
## prediction testing
pisa_predict <- predict(pisa_model, newdata = pisaTest)
## RMSE
RMSE_test_pisa <- sqrt( mean( ( pisaTest$readingScore - pisa_predict )^2 ) )
RMSE_test_pisa ## 76.29079
## problem 11
levels(pisaTrain$raceeth)
str(pisaTrain)
## problem 13
summary(pisa_model) ## take alfa = 0.05
## problem 14
pisa_baseline <- mean(pisaTrain$readingScore)
pisa_baseline
## problem 15
pisa_SST = sum((mean(pisaTrain$readingScore) - pisaTest$readingScore)^2)
pisa_SST
## problem 16
## importing Flu dataset
flu <- read.csv("Flu.csv")
## problem 17
hist(Flu$ILI, xlab="ILI", ylab="Frequemcy")
## when ILI goes down, the frequencies are decreasing
summary(flu$ILI)
##problem 18
library(ggplot2)
cor(log(Flu$ILI), log(Flu$Queries))
qplot(log(ILI), Queries, data = flu)
##problem 21
set.seed(20)
sub <- sample(nrow(flu), floor(nrow(flu)*0.75))
fluTrain <- flu[sub, ]
fluTest <- flu[-sub,]
## importing climate_change dataset
climate_change <- read.csv("climate_change.csv")
## creating train and test datasets
?subset
climateTrain <- subset(climate_change, Year <= 2006)
climateTest <- climate_change[!(climate_change$Year %in% climateTrain$Year),]
climate_fm <- formula(Temp ~ MEI+CO2+CH4+N2O+CFC.11+CFC.12+TSI+Aerosols-Year-Month)
climate_model <- lm(climate_fm, data = climateTrain)
summary(climate_model)
#correlations between alll variables
variables <- sapply(climateTrain, is.numeric)
cor(climateTrain[,variables])
new_climate_fm <- formula(Temp ~ MEI-CO2-CH4+N2O-CFC.11-CFC.12+TSI+Aerosols-Year-Month)
new_climate_model <- lm(new_climate_fm, data = climateTrain)
summary(new_climate_model)
library(MASS)
climate_step <- stepAIC(climate_model, direction = "both")
climate_step$anova
## prediction training
climate_predict <- predict(climate_step, newdata = climateTest)
## RMSE
RMSE_climate_AIC <- sqrt( mean( ( climateTest$Temp - climate_predict )^2 ) )
RMSE_climate_AIC
cor(log(Flu$ILI), Flu$Queries)
cor(log(flu$ILI), flu$Queries)
qplot(log(ILI), Queries, data = flu)
flu_qplot <- qplot(log(flu$ILI), flu$Queries)
flu_qplot + geom_abline(intercept=-2, slope=1)
flu_qplot <- qplot(log(flu$ILI), flu$Queries)
flu_qplot + geom_abline(intercept=-2, slope=1)
flu_trend <- lm(log(flu$ILI) ~ flu$Queries)
summary(flu_trend)
FluTrend1 <- lm(log(flu$ILI) ~ flu$Queries)
summary(FluTrend1)
rm(flu_trend)
flu_model <- lm(ILI ~ Queries,data = fluTrain)
flu_pred <- predict(flu_model, newdata = fluTest)
flu_RMSE <- sqrt(mean((flu$ILI - flu_pred)^2))
flu_RMSE <- sqrt( mean( ( fluTrain$ILI - pisa_predict )^2 ) )
flu_pred <- predict(flu_model, newdata = fluTrain)
flu_RMSE <- sqrt( mean( ( fluTrain$ILI - pisa_predict )^2 ) )
flu_baseline <- sqrt( mean ( ( fluTest$ILI - mean( fluTrain$ILI ) )^2) )
flu_baseline
variables <- sapply(climateTrain, is.numeric)
cor(climateTrain[,variables]) #correlations between all variables
new_climate_fm <- formula(Temp ~ MEI-CO2-CH4+N2O-CFC.11-CFC.12+TSI+Aerosols-Year-Month)
new_climate_model <- lm(new_climate_fm, data = climateTrain)
summary(new_climate_model)
new_climate_fm <- formula(Temp ~ MEI-CO2-CH4+N2O-CFC.11-CFC.12+TSI+Aerosols-Year-Month)
new_climate_model <- lm(new_climate_fm, data = climateTrain)
summary(new_climate_model)
climate_step <- stepAIC(climate_model1, direction="both")
climate_model1 <- lm(Temp~MEI+CO2+CH4+N2O+CFC.11+CFC.12+TSI+Aerosols,data = climate_change)
names(climate_change)
climate_step <- stepAIC(climate_model1, direction="both")
summary(climate_step)
pred_AIC <- predict(climate_model1, newdata=test)
pred_AIC <- predict(climate_model1, newdata = cliamteTest)
pred_AIC <- predict(climate_model1, newdata = climateTest)
RMSE_AIC <- sqrt(mean( ( climate_change$Temp - pred_AIC )^2 ) )
climate_modelAIC <- lm( Temp~.-Year-Month, data = climateTrain )
climate_step <- stepAIC( model, direction = 'both' )
climate_step <- stepAIC( climate_modelAIC, direction = 'both' )
climate_step$anova
stepModel <- lm( Temp~.-Year-Month-CH4, data = train )
climate_model1 <- lm(Temp~.-Year-Month, data = climateTrain)
climate_step <- stepAIC(climate_modelAIC, direction = 'both')
climate_step$anova
climate_stepModel <- lm(Temp~.-Year-Month-CH4, data = climateTrain)
summary(climate_stepModel) # Adjusted R-squared:  0.7445
predictions <- predict(climate_stepModel, newdata = climateTest)
dtep_pred <- predict(climate_stepModel, newdata = climateTest)
step_pred <- predict(climate_stepModel, newdata = climateTest)
rm(dtep_pred)
step_pred <- predict(climate_stepModel, newdata = climateTest)
RMSE_step <- sqrt( mean( ( climateTest$Temp - step_pred )^2 ) )
RMSE_step # 0.09522876
climate_step <- stepAIC(climate_modelAIC, direction = 'both')
summary(new_climate_model)
new_climate_fm <- formula(Temp~MEI+CO2+CH4+N2O+CFC.11+CFC.12+TSI+Aerosols, data = train)
new_climate_fm <- formula(Temp~MEI+CO2+CH4+N2O+CFC.11+CFC.12+TSI+Aerosols)
new_climate_model <- lm(new_climate_fm, data = climateTrain)
summary( model )
summary(new_climate_model)
cor( climateTrain )
cor(climateTrain) #correlations between all variables
model_clim1 <- lm( Temp~MEI+N2O+TSI+Aerosols, data = climateTrain )
cor( climateTrain )
model_clim1 <- lm( Temp~MEI+N2O+TSI+Aerosols, data = climateTrain )
summary(model_clim1) # 0.02532
summary(model_clim1) # 0.02532 and Adj. R-squared:  0.7222
